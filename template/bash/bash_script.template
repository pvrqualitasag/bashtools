#!/bin/bash
###
###
###
###   Purpose:   [SCRIPT_PURPOSE]
###   started:   [START_DATE] ([SCRIPT_AUTHOR])
###
### ######################################### ###


#Set Script Name variable
SCRIPT=`basename ${BASH_SOURCE[0]}`

### # -------------------------------------- ###
### # functions
usage () {
  local l_MSG=$1
  echo "Usage Error: $l_MSG"
  echo "Usage: $SCRIPT -<[SCRIPT_ARG] [ARG_VALUE]"
  echo "  where <[ARG_VALUE]> [ARG_MEANING]"
  echo "Recognized optional command line arguments"
  echo "-[OPTIONAL_ARG] <[OPTIONAL_ARG_VALUE]>  -- [OPTIONAL_ARG_MEANING]"
  exit 1
}

### # produce a start message
start_msg () {
  echo "Starting $SCRIPT at: "`date +"%Y-%m-%d %H:%M:%S"`
}

### # produce an end message
end_msg () {
  echo "End of $SCRIPT at: "`date +"%Y-%m-%d %H:%M:%S"`
}

### # -------------------------------------------- ###
### # Use getopts for commandline argument parsing ###
### # If an option should be followed by an argument, it should be followed by a ":".
### # Notice there is no ":" after "h". The leading ":" suppresses error messages from
### # getopts. This is required to get my unrecognized option code to work.
while getopts :[COMMANDLINE_FLAG]:h: FLAG; do
  case $FLAG in
    [COMMANDLINE_FLAG]) # set option "[COMMANDLINE_FLAG]"  
      [OPTION_STATEMENT]
	    ;;
	  h) # option -h shows usage
	    usage "Help message for $SCRIPT"
	    ;;
	  *) # invalid command line arguments
	    usage "Invalid command line argument $OPTARG"
	    ;;
  esac
done  

shift $((OPTIND-1))  #This tells getopts to move on to the next argument.

### # -------------------------------------------- ##
### # Main part of the script starts here ...
start_msg


### # -------------------------------------------- ##
### # Script ends here
end_msg

### # -------------------------------------------- ##
### # What comes below is documentation that can be used with perldoc

: <<=cut
=pod

=head1 NAME

   [SCRIPT_NAME] - [SCRIPT_SHORT_TITLE]

=head1 SYNOPSIS


=head1 DESCRIPTION


=head2 Requirements



=head1 LICENSE

Artistic License 2.0 http://opensource.org/licenses/artistic-license-2.0


=head1 AUTHOR


=cut