#!/bin/bash
###
###
###
###   Purpose:   [SCRIPT_PURPOSE]
###   started:   [START_DATE] ([SCRIPT_AUTHOR])
###
### ###################################################################### ###


# ======================================== # ======================================= #
# global constants                         #                                         #
# ---------------------------------------- # --------------------------------------- #
# prog paths                               #                                         #
BASENAME=/usr/bin/basename                 # PATH to basename function               #
DIRNAME=/usr/bin/dirname                   # PATH to dirname function                #
# ---------------------------------------- # --------------------------------------- #
# directories                              #                                         #
INSTALLDIR=`$DIRNAME ${BASH_SOURCE[0]}`    # installation dir of bashtools on host   #
UTILDIR=$INSTALLDIR/../util                # directory containing utilities          #
TEMPLATEDIR=$INSTALLDIR/../template        # directory containing templates          #
# ---------------------------------------- # --------------------------------------- #
# files                                    #                                         #
SCRIPT=`$BASENAME ${BASH_SOURCE[0]}`       # Set Script Name variable                #
# ======================================== # ======================================= #


# Use utilities
UTIL=$UTILDIR/bash_utils.sh
source $UTIL


### # ====================================================================== #
### # functions


### # ====================================================================== #
### # Use getopts for commandline argument parsing                         ###
### # If an option should be followed by an argument, it should be followed by a ":".
### # Notice there is no ":" after "h". The leading ":" suppresses error messages from
### # getopts. This is required to get my unrecognized option code to work.
while getopts :h FLAG; do
  case $FLAG in
	  h) # option -h shows usage
  	  usage $SCRIPT "Help message" "$SCRIPT "
	    ;;
	  *) # invalid command line arguments
	    usage $SCRIPT "Invalid command line argument $OPTARG" "$SCRIPT"
	    ;;
  esac
done  

shift $((OPTIND-1))  #This tells getopts to move on to the next argument.


### # ====================================================================== #
### # Main part of the script starts here ...
start_msg $SCRIPT

### # Continue to put your code here


### # ====================================================================== #
### # Script ends here
end_msg $SCRIPT

### # ====================================================================== #
### # What comes below is documentation that can be used with perldoc

: <<=cut
=pod

=head1 NAME

   [SCRIPT_NAME] - [SCRIPT_SHORT_TITLE]

=head1 SYNOPSIS


=head1 DESCRIPTION


=head2 Requirements



=head1 LICENSE

Artistic License 2.0 http://opensource.org/licenses/artistic-license-2.0


=head1 AUTHOR

[SCRIPT_AUTHOR]


=head1 DATE

[START_DATE]


=cut